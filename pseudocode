svg of width and height

button centralise
button decentralise



availablePower = 1000

createNodes(
    for n <= 100,
        create node with {
            power = random 10, 
            x = random width, 
            y random height, 
            radius = radius(power), 
            vx, 
            vy, 
            linkLength = linkLength(power), 
            linkNum = linkNum(power), 
            linkedNum = 0}
        add node to nodes array
)

radius(
    map this.power from 0,100 to 0,40
)

linkLength(
    map this.power from 0,100 to 0,sqrt(wˆ2 + hˆ2)
)

linkNum(
    map this.power from 0,100 to 1,100
)



updateNodes()

updateLinks(
    for each source node, 
        while linkedNum = linkNum, 
            do nothing

        while linkedNum > LinkNum,
            pick one of its targets, if linkedNum of target > linkNum, if power of target < power of self
                delete link between them from links array
                decrease linkedNum of source and target
        
        while linkedNum < linkNum, 
            pick a random target. if linkedNum of target < linkNum, and distance to target < linkLength source or target 
                create link between source and target in links array
                increase linkedNum of source and target
)



simulate(set force parameters, deactivate buttons, and visualise() on tick activate buttons once done)

visualise(append, update, remove links and then nodes through transitions)

initiate(updatePower, updateNodes, updateLinks, simulate)



centralise(
    for each link, 
        if source.power >= target.power, and target.power>10
            set source.power = source.power + 10%target.power and set target.power = target.power - 10%target.power
        if source.power <= target.power, and source.power>10
            set source. power = source.power - 10%target.power and set target.power = target.power + 10%target.power
        
    , updateNodes, updateLinks, simulate
)

decentralise(
    for each link, 
        if source.power > target.power, and target.power>10
            set source.power = source.power - 10%target.power and set target.power = target.power + 10%target.power
        if source.power < target.power, and source.power>10
            set source.power = source.power + 10%target.power and set target.power = target.power - 10%target.power

    , updateNodes, updateLinks, simulate
)