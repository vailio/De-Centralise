svg of width and height

button centralise
button decentralise



availablePower = 1000

createNodes(
    for n <= 100,
        create node with {power, x, y, radius, vx, vy, linkLength, linkNum, linkedNum}
        add node to nodes array
    return nodes
)

for each link, if source.power >= target.power, 
    set source.power = source.power + 10%target.power and set target.power = target.power - 10%target.power

updatePower(
    min = 0 max = 100
    for each node, 
        distribute availablePower in percentage
    decrease availablePower by that much
)

radius(
    min = 1 max = 50 
    power
)

linkLength(
    min = 0 max = diagonal of svg
    power 
)

linkNum(power)



updateNodes()

updateLinks(
    for each source node, 
        while linkedNum = linkNum, 
            do nothing

        while linkedNum > LinkNum,
            pick one of its targets, if linkedNum > linkNum, if power of target < power of self
                delete link between them from links array
                decrease linkedNum of source and target
        
        while linkedNum < linkNum, 
            pick a random target. if linkedNum < linkNum, and distance to target < linkLength source or target 
                create link between source and target in links array
                increase linkedNum of source and target
    
    return links
)



simulate(set force parameters, deactivate buttons, and visualise() on tick activate buttons once done)

visualise(append, update, remove links and then nodes through transitions)

initiate(updatePower, updateNodes, updateLinks, simulate)



centralise(updatePower, updateNodes, updateLinks, simulate)

decentralise(updatePower, updateNodes, updateLinks, simulate)